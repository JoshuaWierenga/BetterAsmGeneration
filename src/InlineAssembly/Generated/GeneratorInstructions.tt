<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="$(PKGIced)\\lib\\net45\\Iced.dll" #>
<#@ import namespace="Iced.Intel" #>
<#@ output extension=".cs" #>
namespace InlineAssembly;

internal static class GeneratorInstructions
{
    // This list allows InlineAssembly.Generator to check if a token is an instruction when given string format
    // assembly without having to use reflection to access the full instructions list directly
    internal static string[] Instructions = {
    <# foreach (int i in Enum.GetValues(typeof(Mnemonic)))
    {
        String mnemonic = Enum.GetName(typeof(Mnemonic), i);
        String instructionName = mnemonic.ToLower();
        if (mnemonic == "In" || mnemonic == "Int" || mnemonic == "Out")
        {
            instructionName = "@" + instructionName;
        } #>
    "<#= instructionName #>",
    <# }
    #>
};
}
