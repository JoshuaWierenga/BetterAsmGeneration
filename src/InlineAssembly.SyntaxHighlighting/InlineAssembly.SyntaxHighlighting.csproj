<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <MinimumVisualStudioVersion>17.0</MinimumVisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <UseCodebase>true</UseCodebase>
  </PropertyGroup>

  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <LangVersion>9.0</LangVersion>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <PlatformTarget>x64</PlatformTarget>

    <ErrorReport>prompt</ErrorReport>

    <SchemaVersion>2.0</SchemaVersion>
    <ProjectTypeGuids>{82b43b9b-a64c-4715-b499-d71e9ca2bd60};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <ProjectGuid>{04580D85-58EC-4476-9D53-B988E8443ECF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>InlineAssembly.SyntaxHighlighting</RootNamespace>
    <AssemblyName>InlineAssembly.SyntaxHighlighting</AssemblyName>
    <GeneratePkgDefFile>true</GeneratePkgDefFile>
    <IncludeAssemblyInVSIXContainer>true</IncludeAssemblyInVSIXContainer>
    <IncludeDebugSymbolsInVSIXContainer>true</IncludeDebugSymbolsInVSIXContainer>
    <IncludeDebugSymbolsInLocalVSIXDeployment>true</IncludeDebugSymbolsInLocalVSIXDeployment>
    <CopyBuildOutputToOutputDirectory>true</CopyBuildOutputToOutputDirectory>
    <CopyOutputSymbolsToOutputDirectory>false</CopyOutputSymbolsToOutputDirectory>

    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>Key.snk</AssemblyOriginatorKeyFile>

    <StartAction>Program</StartAction>
    <StartProgram Condition="'$(DevEnvDir)' != ''">$(DevEnvDir)devenv.exe</StartProgram>
    <StartArguments>/rootsuffix Exp</StartArguments>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <CSharpGrammar>$(SolutionDir)TextmateLanguages\csharp-tmLanguage\Grammars\csharp.tmLanguage</CSharpGrammar>
    <CSharpAsmGrammar>Grammars\generated.csharp.asm.tmLanguage</CSharpAsmGrammar>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />

    <Compile Include="SwitchExtensionCommand.cs" />
    <Compile Include="SwitchExtensionCommandPackage.cs" />
    <Content Include="Resources\Command1.png" />
    <Content Include="Resources\Command1Package.ico" />

    <None Include="$(CSharpGrammar)">
      <Link>Grammars\csharp.tmLanguage</Link>
    </None>
    <Content Include="$(CSharpAsmGrammar)">
      <IncludeInVSIX>true</IncludeInVSIX>
    </Content>
    <Content Include="$(SolutionDir)TextmateLanguages\x86_64-assembly-vscode\syntaxes\language-x86_64-assembly.tmLanguage">
      <Link>Grammars\language-x86_64-assembly.tmLanguage</Link>
      <IncludeInVSIX>true</IncludeInVSIX>
    </Content>

    <VSCTCompile Include="SwitchExtensionCommandPackage.vsct">
      <ResourceName>Menus.ctmenu</ResourceName>
    </VSCTCompile>
    <EmbeddedResource Include="VSPackage.resx">
      <MergeWithCTO>true</MergeWithCTO>
      <ManifestResourceName>VSPackage</ManifestResourceName>
    </EmbeddedResource>
    <None Include="Key.snk" />

    <Content Include="$(SolutionDir)LICENSE.md">
      <Link>Resources\LICENSE.md</Link>
      <IncludeInVSIX>true</IncludeInVSIX>
    </Content>
    <Content Include="languages.pkgdef">
      <IncludeInVSIX>true</IncludeInVSIX>
    </Content>
    <None Include="source.extension.vsixmanifest">
      <SubType>Designer</SubType>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudio.SDK" Version="17.4.33103.184" ExcludeAssets="runtime">
      <IncludeAssets>compile; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VSSDK.BuildTools" Version="17.4.2119">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Design" />
  </ItemGroup>

  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(VSToolsPath)\VSSDK\Microsoft.VsSDK.targets" Condition="'$(VSToolsPath)' != ''" />

  <!-- Modify csharp grammar to highlight asm blocks. -->
  <Target Name="BeforeBuild">
    <!-- Create a local copy of the csharp grammar to modify. -->
    <Copy SourceFiles="$(CSharpGrammar)" DestinationFiles="$(CSharpAsmGrammar)" />

    <!-- Replace the supported file type with csasm in the local csharp grammar
         as I have not found a way to make it apply on actual cs files. -->
    <XmlPoke XmlInputPath="$(CSharpAsmGrammar)"
             Query="plist/dict/key[.='fileTypes']/following-sibling::array[1]/child::string[.='cs']"
             Value="csasm" />

    <!-- Read existing comment patterns from the local csharp grammar, this is
         done as XmlPoke can only replace parts of files, not add onto them. -->
    <XmlPeek XmlInputPath="$(CSharpAsmGrammar)"
             Query="plist/dict/key[.='repository']/following-sibling::dict[1]/key[.='comment']/following-sibling::dict[1]/key[.='patterns']/following-sibling::array[1]/child::*">
      <Output TaskParameter="Result" ItemName="CSharpCommentsXML" />
    </XmlPeek>

    <!-- Convert XmlPeek array result to a new line delimited string and setup 
         new comment patterns. -->
    <PropertyGroup>
      <TempExistingCSharpCommentsXMLString>@(CSharpCommentsXML)</TempExistingCSharpCommentsXMLString>
      <ExistingCSharpCommentsXMLString>$(TempExistingCSharpCommentsXMLString.Replace('%3C/dict%3E;', '%3C/dict%3E%0D%0A'))</ExistingCSharpCommentsXMLString>
      <NewCSharpCommentsXMLString>$([MSBuild]::Escape('&lt;dict&gt;
            &lt;key&gt;name&lt;/key&gt;
            &lt;string&gt;asm-comment-with-verbatim-string-literal&lt;/string&gt;
            &lt;key&gt;begin&lt;/key&gt;
            &lt;string&gt;(/\* ?language ?= ?asm ? \*/) ?(@")&lt;/string&gt;
            &lt;key&gt;beginCaptures&lt;/key&gt;
            &lt;dict&gt;
              &lt;key&gt;1&lt;/key&gt;
              &lt;dict&gt;
                &lt;key&gt;name&lt;/key&gt;
                &lt;string&gt;punctuation.definition.comment.cs&lt;/string&gt;
              &lt;/dict&gt;
              &lt;key&gt;2&lt;/key&gt;
              &lt;dict&gt;
                &lt;key&gt;name&lt;/key&gt;
                &lt;string&gt;punctuation.definition.string.begin.cs&lt;/string&gt;
              &lt;/dict&gt;
            &lt;/dict&gt;
            &lt;key&gt;end&lt;/key&gt;
            &lt;string&gt;"&lt;/string&gt;
            &lt;key&gt;endCaptures&lt;/key&gt;
            &lt;dict&gt;
              &lt;key&gt;0&lt;/key&gt;
              &lt;dict&gt;
                &lt;key&gt;name&lt;/key&gt;
                &lt;string&gt;punctuation.definition.string.end.cs&lt;/string&gt;
              &lt;/dict&gt;
            &lt;/dict&gt;
            &lt;key&gt;patterns&lt;/key&gt;
            &lt;array&gt;
              &lt;dict&gt;
                &lt;key&gt;include&lt;/key&gt;
                &lt;string&gt;source.asm.x86_64&lt;/string&gt;
              &lt;/dict&gt;
            &lt;/array&gt;
          &lt;/dict&gt;
          &lt;dict&gt;
            &lt;key&gt;name&lt;/key&gt;
            &lt;string&gt;asm-comment-with-raw-string-literal-triple&lt;/string&gt;
            &lt;key&gt;begin&lt;/key&gt;
            &lt;string&gt;(/\* ?language ?= ?asm ? \*/) ?(""")&lt;/string&gt;
            &lt;key&gt;beginCaptures&lt;/key&gt;
            &lt;dict&gt;
              &lt;key&gt;1&lt;/key&gt;
              &lt;dict&gt;
                &lt;key&gt;name&lt;/key&gt;
                &lt;string&gt;punctuation.definition.comment.cs&lt;/string&gt;
              &lt;/dict&gt;
              &lt;key&gt;2&lt;/key&gt;
              &lt;dict&gt;
                &lt;key&gt;name&lt;/key&gt;
                &lt;string&gt;punctuation.definition.string.begin.cs&lt;/string&gt;
              &lt;/dict&gt;
            &lt;/dict&gt;
            &lt;key&gt;end&lt;/key&gt;
            &lt;string&gt;"""&lt;/string&gt;
            &lt;key&gt;endCaptures&lt;/key&gt;
            &lt;dict&gt;
              &lt;key&gt;0&lt;/key&gt;
              &lt;dict&gt;
                &lt;key&gt;name&lt;/key&gt;
                &lt;string&gt;punctuation.definition.string.end.cs&lt;/string&gt;
              &lt;/dict&gt;
            &lt;/dict&gt;
            &lt;key&gt;patterns&lt;/key&gt;
            &lt;array&gt;
              &lt;dict&gt;
                &lt;key&gt;include&lt;/key&gt;
                &lt;string&gt;source.asm.x86_64&lt;/string&gt;
              &lt;/dict&gt;
            &lt;/array&gt;
          &lt;/dict&gt;'))</NewCSharpCommentsXMLString>
    </PropertyGroup>
    
    <!-- Add the new asm comment patterns in the local csharp grammar. -->
    <XmlPoke XmlInputPath="$(CSharpAsmGrammar)"
             Query="plist/dict/key[.='repository']/following-sibling::dict[1]/key[.='comment']/following-sibling::dict[1]/key[.='patterns']/following-sibling::array[1]"
             Value="$(NewCSharpCommentsXMLString)$(ExistingCSharpCommentsXMLString)" />
  </Target>

</Project>